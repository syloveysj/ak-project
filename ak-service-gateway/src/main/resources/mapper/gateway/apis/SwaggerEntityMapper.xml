<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunjian.ak.gateway.entity.apis.SwaggerEntityMapper">
    <!-- 数据库中表名为:swagger的列名 -->
    <sql id="column_sql">
        swagger.id,
        swagger.content
    </sql>

    <!-- 数据库中表名为:swagger的非空where条件 -->
    <sql id="whereClause_sql">
        <if test="id != null">and swagger.id::text = #{id}</if>
        <if test="content != null">and swagger.content = #{content}</if>
    </sql>

    <!-- Swagger的resultMap,column是给数据库列起的别名,它对应property类的属性 -->
    <resultMap id="result_Swagger_Map" type="com.yunjian.ak.gateway.entity.apis.SwaggerEntity">
        <id column="id" property="id" />
        <result column="content" property="content" />
    </resultMap>

    <!-- 将Swagger中属性值不为null的数据,插入到对应数据库的表中 -->
    <insert id="insert" parameterType="com.yunjian.ak.gateway.entity.apis.SwaggerEntity">
        insert into swagger
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="content != null">content,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="content != null">#{content},</if>
        </trim>
    </insert>

    <!-- 将列表中Swagger对象数据,同时插入到对应数据库的表中 -->
    <insert id="insertBatch" parameterType="list">
        insert into swagger (id, content)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id}::uuid, #{item.content})
        </foreach>
        ON CONFLICT (id)
        DO UPDATE SET content = EXCLUDED.content
    </insert>

    <!--获得类名为:Swagger对应的数据库表满足条件的数据总行数 -->
    <select id="count" parameterType="com.yunjian.ak.gateway.entity.apis.SwaggerEntity" resultType="int">
        select count(*) from swagger
        <where>
            <include refid="whereClause_sql"/>
        </where>
    </select>

    <!-- 通过Swagger的id将Swagger中属性值不为null的数据更新到数据库对应的表中 -->
    <update id="update" parameterType="com.yunjian.ak.gateway.entity.apis.SwaggerEntity">
        update swagger
        <set>
            <trim suffixOverrides=",">
                <if test="content != null">content = #{content},</if>
            </trim>
        </set>
        <where>
            <choose>
                <when test="id != null">and id::text = #{id}</when>
                <otherwise>and id::text = </otherwise>
            </choose>
        </where>
    </update>

    <!-- 批量更新 -->
    <update id="updateBatch" parameterType="list">
        <foreach collection="list" index="index" item="item" open="" separator=";" close="">
            update swagger
            <set>
                <trim suffixOverrides=",">
                    <if test="item.content != null">content = #{item.content},</if>
                </trim>
            </set>
            WHERE id::text = #{item.id}
        </foreach>
    </update>

    <!-- 通过Swagger的id将数据库表中对应的数据删除 -->
    <delete id="delete" parameterType="com.yunjian.ak.gateway.entity.apis.SwaggerEntity">
        delete from swagger where 1=1
        <choose>
            <when test="id != null"> and id::text = #{id}</when>
            <otherwise> and id = </otherwise>
        </choose>
    </delete>

    <!-- 批量删除 -->
    <delete id="deleteBatch">
        delete from swagger where id in
        <trim prefix=" (" suffix=")" suffixOverrides=",">
            <foreach collection="list" item="id" separator=",">
                #{id}
            </foreach>
        </trim>
    </delete>

    <!-- 获得一个Swagger对象,以参数Swagger对象中不为空的属性作为条件进行查询 -->
    <select id="select" parameterType="com.yunjian.ak.gateway.entity.apis.SwaggerEntity" resultMap="result_Swagger_Map">
        select
        <include refid="column_sql"/>
        from swagger
        <where>
            <include refid="whereClause_sql"/>
        </where>
    </select>

    <!-- 查询数据库中表名为:swagger的所有数据 -->
    <select id="selectAll" resultMap="result_Swagger_Map">
        select
        <include refid="column_sql"/>
        from swagger
    </select>

    <!-- 通过Swagger的id获得对应数据库中表的数据对象 -->
    <select id="selectByID" parameterType="String" resultMap="result_Swagger_Map">
        select
        <include refid="column_sql"/>
        from swagger
        where swagger.id::text = #{id}
    </select>

    <!-- 获得一个Swagger对象,以参数Swagger对象中不为空的属性作为条件进行分页查询 -->
    <select id="selectByPage" parameterType="com.yunjian.ak.gateway.entity.apis.SwaggerEntity" resultMap="result_Swagger_Map">
        select
        <include refid="column_sql"/>
        from swagger
        <where>
            <include refid="whereClause_sql"/>
        </where>
    </select>

</mapper>
